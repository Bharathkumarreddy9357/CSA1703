print("192372258 bharath")
import math

# Define the minimax algorithm with alpha-beta pruning
def minimax(depth, node_index, maximizing_player, values, alpha, beta):
    # Base case: leaf node is reached
    if depth == 3:
        return values[node_index]

    if maximizing_player:
        best = -math.inf
        # Traverse the left and right children
        for i in range(2):
            val = minimax(depth + 1, node_index * 2 + i, False, values, alpha, beta)
            best = max(best, val)
            alpha = max(alpha, best)

            # Alpha Beta Pruning
            if beta <= alpha:
                break
        return best

    else:
        best = math.inf
        # Traverse the left and right children
        for i in range(2):
            val = minimax(depth + 1, node_index * 2 + i, True, values, alpha, beta)
            best = min(best, val)
            beta = min(beta, best)

            # Alpha Beta Pruning
            if beta <= alpha:
                break
        return best


# Example usage
if __name__ == "__main__":
    # Example game tree leaves (8 leaf nodes in a binary tree of depth 3)
    values = [3, 5, 6, 9, 1, 2, 0, -1]

    print("Optimal value is:", minimax(0, 0, True, values, -math.inf, math.inf))
